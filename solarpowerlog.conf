# This is a sample configuation file for solarpowerlog.
#
# Please note, the file is parsed by libconfig.

# Currently, this is quite boring -- as under developement.

application:
{
	# how often query the informations from the inveters
	# the value specified the time between queries in seconds.
	# should be a  float. 
	pollinginterval = 5.0;
	
	
};

inverter :
{
	 inverters = ( 
  		{ # (REQUIRED) Name of the Inverter (Will be used as reference in the programm)
  		  name   = "Inverter_1";
  		  
  		  # (REQUIRED) "Human Readable Description of the fine piece of hardware. Not interpreted by this software"
  		  description = "A Inverter inverting";
  		  
  		  # (REQUIRED) Selects the family of the inverters.
  		  # (In SW-Speak: Specifies the family of factory to generate. The generated factory will instanciate the correct model class
  		  # specified by "model" 
  		  manufactor =  "SPUTNIK_ENGINEERING";
  		  
          # (REQUIRED) Which model we about to talk too
          # Your choice is "S-Series" (currently)  
          model ="S-Series";
          
          # (REQUIRED BY SPUTNIK, S-Series)
          # mode of comm (planned: 
          #		"TCP/IP",          Ethernet 
          #		"RS485,            RS485   
          #		"RS485overTCPIP"   Daisy-Chained modules with one over ethernet, the others chained to the rs485 output.
          comms =  "TCP/IP";		
      
      	  # TCP/IP options. Address and Port.
      	  # Port can also be a so-called "well-known-port" named as string. Example: "http"
          tcpadr =  "192.168.0.201";
            
          tcpport = 12345;
          # optional: Wait maximum this time to connect to the inverter.
          # default: 3 seconds (value: 3000)
          # Note: Currently blocks the logger until timeout or connection! 
          # NOTE: FEATURE CURRENTLY NOT IMPLEMENTED!  
          tcptimeout = 3000;
          
          # Communication address of the inverter (as set in the menu of the inverter)
          commadr = 1;
          # Adress to use as "our" adress for communication
		  # defaults to 0xFB
          ownadr = 0xfb;
          
          # How often should the inverter be queried
          # The value specifies how long the class will *wait* 
          # after one query has been answered.
          # The value can be a float.  
          # This value is optional and defaults to 5 seconds
          queryinterval=5;
		},
		{
		  name   = "Inverter_2";
  		  
  		  # (REQUIRED) "Human Readable Description of the fine piece of hardware. Not interpreted by this software"
  		  description = "A Inverter inverting";
  		  
  		  # (REQUIRED) Selects the family of the inverters.
  		  # (In SW-Speak: Specifies the family of factory to generate. The generated factory will instanciate the correct model class
  		  # specified by "model" 
  		  manufactor =  "SPUTNIK_ENGINEERING";
  		  
          # (REQUIRED) Which model we about to talk too
          # Your choice is "S-Series" (currently)  
          model ="S-Series";
          
          # (REQUIRED BY SPUTNIK, S-Series)
          # mode of comm (planned: 
          #		"TCP/IP",          Ethernet 
          #		"RS485,            RS485   
          #		"RS485overTCPIP"   Daisy-Chained modules with one over ethernet, the others chained to the rs485 output.
          comms =  "TCP/IP";		
      
      	  # TCP/IP options. Address and Port.
      	  # Port can also be a so-called "well-known-port" named as string. Example: "http"
          tcpadr =  "192.168.0.202";
            
          tcpport = 12345;
          # optional: Wait maximum this time to connect to the inverter.
          # default: 3 seconds (value: 3000)
          # Note: Currently blocks the logger until timeout or connection! 
          # NOTE: FEATURE CURRENTLY NOT IMPLEMENTED!  
          tcptimeout = 3000;
          
          # Communication address of the inverter (as set in the menu of the inverter)
          commadr = 2;
          # Adress to use as "our" adress for communication
		  # defaults to 0xFB
          ownadr = 0xfb;
          
          # How often should the inverter be queried
          # The value specifies how long the class will *wait* 
          # after one query has been answered.
          # The value can be a float.  
          # This value is optional and defaults to 5 seconds
          queryinterval=5;
		},
		{
		  name   = "Inverter_3";
  		  
  		  # (REQUIRED) "Human Readable Description of the fine piece of hardware. Not interpreted by this software"
  		  description = "A Inverter inverting";
  		  
  		  # (REQUIRED) Selects the family of the inverters.
  		  # (In SW-Speak: Specifies the family of factory to generate. The generated factory will instanciate the correct model class
  		  # specified by "model" 
  		  manufactor =  "SPUTNIK_ENGINEERING";
  		  
          # (REQUIRED) Which model we about to talk too
          # Your choice is "S-Series" (currently)  
          model ="S-Series";
          
          # (REQUIRED BY SPUTNIK, S-Series)
          # mode of comm (planned: 
          #		"TCP/IP",          Ethernet 
          #		"RS485,            RS485   
          #		"RS485overTCPIP"   Daisy-Chained modules with one over ethernet, the others chained to the rs485 output.
          comms =  "TCP/IP";		
      
      	  # TCP/IP options. Address and Port.
      	  # Port can also be a so-called "well-known-port" named as string. Example: "http"
          tcpadr =  "192.168.0.203";
            
          tcpport = 12345;
          # optional: Wait maximum this time to connect to the inverter.
          # default: 3 seconds (value: 3000)
          # Note: Currently blocks the logger until timeout or connection! 
          # NOTE: FEATURE CURRENTLY NOT IMPLEMENTED!  
          tcptimeout = 3000;
          
          # Communication address of the inverter (as set in the menu of the inverter)
          commadr = 1;
          # Adress to use as "our" adress for communication
		  # defaults to 0xFB
          ownadr = 0xfb;
          
          # How often should the inverter be queried
          # The value specifies how long the class will *wait* 
          # after one query has been answered.
          # The value can be a float.  
          # This value is optional and defaults to 5 seconds
          queryinterval=5;
		}
     );
};


logger:
{
	loggers = (
		{ 
			# This dumper is known as (required)
			name = "Simple Dumper 1";
			# It is of type 
			type = "DumbDumper";
			# And gets its data from
			datasource = "Inverter_1";
			# Yes, it should clean the screen before dumping
			# (optional, defaults to false (off)
			# use true to enable it. 
			clearscreen = true;
		},
		{ 
			# This dumper is known as (required)
			name = "Simple Dumper 2";
			# It is of type 
			type = "DumbDumper";
			# And gets its data from
			datasource = "Inverter_2";
			# Yes, it should clean the screen before dumping
			# (optional, defaults to false (off)
			# use true to enable it. 
			clearscreen = false;
		},
		{ 
			# This dumper is known as (required)
			name = "Simple Dumper 3";
			# It is of type 
			type = "DumbDumper";
			# And gets its data from
			datasource = "Inverter_3";
			# Yes, it should clean the screen before dumping
			# (optional, defaults to false (off)
			# use true to enable it. 
			clearscreen = false;
		}
		);
};

# Just for reference -- taken from the libconfig sample.conf
# 
#
# books = ( { name   = "Treasure Island";
#               author =  "Robert Louis Stevenson";
#               price  =  29.95;
#               qty    =  5; },
#             { name   = "Snow Crash";
#               author =  "Neal Stephenson";
#               price  =  9.99;
#               qty    =  8; } );
