
dnl Process this file with autoconf to produce a configure script.

AC_INIT(src/solarpowerlog.cpp)
AC_PREREQ(2.59)
# use own directory for the autotools stuff
AC_CONFIG_AUX_DIR(config)

CPPFLAGS="-Wall -Wextra"

# we want this header to be created. 
AC_CONFIG_HEADERS(src/config.h)

# TODO
#AC_COPYRIGHT (copyright-notice )

AM_INIT_AUTOMAKE(solarpowerlog, 0.01)

AC_CONFIG_SRCDIR([src/solarpowerlog.cpp])

### Checks for programs.
# C Compiler
AC_PROG_CC
# C++ Compiler
AC_PROG_CXX
# pkg-config
PKG_CHECK_EXISTS

# We only use C++...
AC_LANG(C++)

### Checks for libraries.
PKG_CHECK_MODULES(CONFIG, libconfig++ >= 1.3.1)

## Check for Boost 
AX_BOOST_BASE([1.38])

AX_BOOST_SYSTEM
if test "x$BOOST_SYSTEM_LIB" = "x"; then
   AC_MSG_ERROR([boost::system library $BOOST_SYSTEM_LIB not found ])
fi

AX_BOOST_THREAD
if test "x$BOOST_THREAD_LIB" = "x"; then
   AC_MSG_ERROR([boost::thread library not $BOOST_THREAD_LIB found ])
fi

AX_BOOST_DATE_TIME
if test "x$BOOST_DATE_TIME_LIB" = "x"; then
  AC_MSG_ERROR([boost::date_time library $BOOST_DATE_TIME_LIB not found ])
fi

AX_BOOST_PROGRAM_OPTIONS
if test "x$BOOST_PROGRAM_OPTIONS_LIB" = "x"; then
   AC_MSG_ERROR([boost::programm_options library $BOOST_PROGRAM_OPTIONS_LIB not found ])
   exit 1
fi

# BOOST ASIO (Header-only-library)
# note: we are requiring boost 1.38, so we do not need to check the asio version here.
AC_CHECK_HEADER([boost/asio/version.hpp], ,[AC_MSG_ERROR("boost::asio header not found")])


### Checks for header files.
AC_CHECK_HEADER([w32-api.h],
 [AC_DEFINE([HAVE_WIN32_API], [1], [Windows API]) ])

### Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_HEADER_TIME
AC_HEADER_ASSERT
AC_TYPE_SIZE_T
AC_CXX_EXPLICIT
AC_CXX_HAVE_STL


### Checks for library functions.
#AC_CHECK_FUNCS([socket])

AC_PROG_INSTALL

AC_CONFIG_FILES(
	[Makefile]
	[src/Makefile]
)
AC_OUTPUT

