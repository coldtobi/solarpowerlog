# This sample configuration shows how to connect with the simulator,
# coigured in the examples_confs/solarpowerlog_simulator files working with the embedded simulator
#
# Please note, the file is parsed by libconfig.


application:
{

    # what debuglevel should be used if not specified by any component
    # Choose out of ALL, TRACE, DEBUG, INFO, WARN, ERROR ,FATAL and NONE
    # optional. If not given, it defaults to "ERROR"
    # Note, if specified a logconfig file, the config file can override this
    # setting.
    dbglevel = "DEBUG"

    # configuration file to load for liblog4cxx
    # see the liblog4cxx docs for details.
    # (http://http://logging.apache.org/log4cxx/index.html)
    # With the configuration file you can specify different log files for different
    # components of the program.
    # note, that if not given it will log everything to the console.
    # note: if the filename ends with .xml, libconfig tries to load the
    # configuration in xml-format, which allows even more tweaks.
    #logconfig = "solarpowerlog_lib4cxx.conf";
    #logconfig = "solarpowerlog_lib4cxx.xml";
};

inverter :
{
    inverters = (
        { # (REQUIRED) Name of the Inverter (Will be used as reference in the program)
        name   = "Netcat";

        # (REQUIRED) "Human Readable Description of the fine piece of hardware. Not interpreted by this software"
        description = "A Inverter inverting";

        # (REQUIRED) Selects the family of the inverters.
        # (In SW-Speak: Specifies the family of factory to generate. The generated factory will instanciate the correct model class
        # specified by "model"
        manufactor =  "SPUTNIK_ENGINEERING";

        # (REQUIRED) Which model we about to talk too
        # Your choice is "S-Series" (currently)
        model ="S-Series";

        # (REQUIRED BY SPUTNIK, S-Series)
        # mode of comm (planned:
        #		"TCP/IP",          Ethernet
        #		"RS485,            RS485
        #		"RS485overTCPIP"   Daisy-Chained modules with one over ethernet, the others chained to the rs485 output.
        comms = "TCP/IP";

        # TCP/IP options. Address and Port.
        # Port can also be a so-called "well-known-port" named as string. Example: "http"
        tcpadr =  "127.0.0.1";

        tcpport = "12345";
        # optional: Wait maximum this time to connect to the inverter.
        # default: 3 seconds (value: 3000)
        # Note: Currently blocks the logger until timeout or connection!
        tcptimeout = 5000;

        # Communication address of the inverter (as set in the menu of the inverter)
        commadr = 1;
        # Adress to use as "our" adress for communication
        # defaults to 0xFB
        ownadr = 0xfb;

        # How often should the inverter be queried
        # The value specifies how long the class will *wait*
        # after one query has been answered.
        # The value can be a float.
        # This value is optional and defaults to 5 seconds
        queryinterval= 3;
        }
    );
};


logger:
{
    loggers = (
        {
            # This dumper is known as (required)
            name = "CVS_Netcat";
            # It is of type
            type = "CVSWriter";
            # And gets its data from
            datasource = "Netcat";
            # Where should we write the file?
            # (If rotate is true, %s will be replaced by the date
            # of the file, formated after ISO 8601: YYYY-MM-DD )
            # Note: If you proved the directory by e.g cron, you can
            # also write the %s in the path.
            logfile="/tmp/Inverter1_%s.csv";
            # Rotate the file at midnight?
            rotate=true;
            # What should we log
            # Valid is "all" as string (Note: The generated CSV will not
            # be RFC 4180 compliant, as we change header in mid-file)
            # Alternate Option:
            # Specify an array with the caps you want.
            #Hint: First use "all" then use the generated file to get your array)
            #data2log="all";
            data2log= [
                "AC grid feeding current (A)",
                "AC grid voltage (V)",
                "Current Grid Feeding Power",
                "DC current in (A)",
                "DC voltage in (V)",
                "Data Query Interval",
                "Data Validity",
                "Energy produced cumulated all time (kWh)",
                "Energy produced this month (kWh)",
                "Energy produced this year (kWh)",
                "Energy produced today (kWh)",
                "Inverter Overall Status",
                "Inverter Power On Hours",
                "Inverter Temperature (C)",
                "Net frequency (Hz)"
            ];
            # options for the plugin
            Compact_CSV=true;
            flush_file_buffer_immediatly=true;
        },
        {
            # This filters will be known as (required)
            name = "HTMLWriter_Netcat";
            # It is of the type
            type = "HTMLWriter";

            # And gets its data from
            datasource = "CVS_Netcat";

            # The module has a parameter-set which might be useful for generating
            # your own templates: Template-Generatin-Assitance. In this mode, all generated
            # values will be put out to a template file called like the name of
            # the HTML Writer object (see above, name), listing all known capabilites
            # for the inverter.

            # the next one is the main switch for the feature: (optional, default false)
            generate_template = true;

            # this one says the template generator, in what directory to put
            # the template (optional, default /tmp/)
            generate_template_dir = "/tmp";

            #update the HTML page every seconds:
            #the value "0" means everytime something changes ,probably not what you want
            #( WARNING: THE VALUE 0 IS NOT YET IMPLEMENTED)
            #if not given, we will try to extract this out of the Data Query Interval
            #of the inverter, which will, if not available, defaults to 300.
            #if not available
            writeevery=15;

            # As in the CSV Plugin,
            # you can specify here the file/path where to store the files
            # the files. %s will be replaced by the current date in ISO 8601
            # format: YYYY-MM-DD. When there is no %s, the file will be replaced
            # on midnight.
            # This option is required.
            htmlfile="/var/www/solarpowerlog-%s.html";

            # Template file to be used
            # This file will be loaded as template... Mandatory.
            templatefile="example_confs/htmlwritertemplate/test.tmpl";


            # The filter can do some modifcations on the values
            # before handing them over to the template engine:
            # to keep it flexible, this is done with this list lists:
            # Parameters:
            #   what_capbility  names the one to be formatted
            #   where_to_store  (optional) if you want to export it to the
            #                   using another name. if "", uses the cap name
            #   parameters      one string with extra parameters to be supplied
            #                   to the formatter.
            #                   note: there can be as many parameters as the
            #                   formatter wants, each in its own string)
            #
            # formatting operation is the operation to be performed:
            #   stripwebroot    remove the webroot-prefix from the capa
            #                   this one needs the config "webroot".
            #                   See below for the parameter this formatter uses.

            formatters = (
            # [ what_capability,       formating_operation, where_to_store ],
            [ "CSVDumper::Filename",   "stripwebroot",   ""        , "/var/www" ],
            [ "CSVDumper::LoggedCaps", "searchcvsentry", "powernow", "Current Grid Feeding Power" ],
            [ "CSVDumper::LoggedCaps", "searchcvsentry", "kwhtoday", "Energy produced today (kWh)" ]
            );

            }

        );
};

