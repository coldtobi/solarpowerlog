# This is a sample configuation file for solarpowerlog.
#
# Please note, the file is parsed by libconfig.

# Currently, this is quite boring -- as under developement.

application:
{
	
	# what debuglevel should be used if not specified by any component
	# Choose out of ALL, TRACE, DEBUG, INFO, WARN, ERROR ,FATAL and NONE
	# optional. If not given, it defaults to "ERROR"
	# Note, if specified a logconfig file, the config file can override this 
	# setting.
	dbglevel = "ALL";
	
	# configuration file to load for liblog4cxx
	# see the liblog4cxx docs for details.
	# (http://http://logging.apache.org/log4cxx/index.html)
	# With the configuration file you can specify different log files for different
	# components of the program.
	# note, that if not given it will log everything to the console. 
	# note: if the filename ends with .xml, libconfig tries to load the 
	# configuration in xml-format, which allows even more tweaks.  
	#logconfig = "solarpowerlog_lib4cxx.conf";
	#logconfig = "solarpowerlog_lib4cxx.xml";
	
	
};

inverter :
{
	 inverters = ( 
  		{ # (REQUIRED) Name of the Inverter (Will be used as reference in the programm)
  		  name   = "Netcat";
  		  
  		  # (REQUIRED) "Human Readable Description of the fine piece of hardware. Not interpreted by this software"
  		  description = "A Inverter inverting";
  		  
  		  # (REQUIRED) Selects the family of the inverters.
  		  # (In SW-Speak: Specifies the family of factory to generate. The generated factory will instanciate the correct model class
  		  # specified by "model" 
  		  manufactor =  "SPUTNIK_ENGINEERING";
  		  
          # (REQUIRED) Which model we about to talk too
          # Your choice is "S-Series" (currently)  
          model ="S-Series";
          
          # (REQUIRED BY SPUTNIK, S-Series)
          # mode of comm (planned: 
          #		"TCP/IP",          Ethernet 
          #		"RS485,            RS485   
          #		"RS485overTCPIP"   Daisy-Chained modules with one over ethernet, the others chained to the rs485 output.
          comms = "TCP/IP";		
      
      	  # TCP/IP options. Address and Port.
      	  # Port can also be a so-called "well-known-port" named as string. Example: "http"
          tcpadr =  "127.0.0.1";
            
          tcpport = "12345";
          # optional: Wait maximum this time to connect to the inverter.
          # default: 3 seconds (value: 3000)
          # Note: Currently blocks the logger until timeout or connection! 
          tcptimeout = 3000;
          
          # Communication address of the inverter (as set in the menu of the inverter)
          commadr = 1;
          # Adress to use as "our" adress for communication
		  # defaults to 0xFB
          ownadr = 0xfb;
          
          # How often should the inverter be queried
          # The value specifies how long the class will *wait* 
          # after one query has been answered.
          # The value can be a float.  
          # This value is optional and defaults to 5 seconds
          queryinterval= 5;
		}
     );
};


logger:
{
	loggers = (
		{ 
			# This dumper is known as (required)
			name = "CVS_Netcat";
			# It is of type 
			type = "CVSWriter";
			# And gets its data from
			datasource = "Netcat";
			# Where should we write the file?
			# (If rotate is true, %s will be replaced by the date 
			# of the file, formated after ISO 8601: YYYY-MM-DD )
			# Note: If you proved the directory by e.g cron, you can
			# also write the %s in the path.
			logfile="/tmp/Inverter1_%s.csv";
			# Rotate the file at midnight?
			rotate=true;
			# What should we log
			# Valid is "all" as string (Note: The generated CSV will not 
			# be RFC 4180 compliant, as we change header in mid-file)
			# Alternate Option:
			# Specify an array with the caps you want.
			#Hint: First use "all" then use the generated file to get your array)
			#data2log="all";
			data2log= [
				"AC grid feeding current (A)",
				"AC grid voltage (V)",
				"Current Grid Feeding Power",
				"DC current in (A)",
				"DC voltage in (V)",
				"Data Query Interval",
				"Data Validity",
				"Energy produced cumulated all time (kWh)",
				"Energy produced this month (kWh)",
				"Energy produced this year (kWh)",
				"Energy produced today (kWh)",
				"Inverter Overall Status",
				"Inverter Power On Hours",
				"Inverter Temperature (C)",
				"Net frequency (Hz)"
			]; 
			# 		
		}
		);
};

